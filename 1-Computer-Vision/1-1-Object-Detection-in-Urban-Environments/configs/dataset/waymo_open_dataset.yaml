### TensorFlow Object Detection API on Custom Dataset ### 
## By Jonathan L. Moran (jonathan.moran107@gmail.com) ###


#     Configuration
#     --------------
#     Run the `edit_config.py` script with the supplied arguments:  
#    
#     TRAIN_DIR:  {path to train data directory}
#     EVAL_DIR:   {path to validation or test directory}
#     BATCH_SIZE: {batch size for training}
#     CHECKPOINT: {path to pre-trained model checkpoints}
#     LABEL_MAP:  {path to the `label_map` file}

#     python edit_config.py -- \
#         --train_dir=$TRAIN_DIR --eval_dir=$EVAL_DIR \
#         --batch_size=$BATCH_SIZE --checkpoint=$CHECKPOINT \
#         --label_map=$LABEL_MAP


waymo_open_dataset:
    cwd: ${hydra:runtime.cwd}                           # Path to the current working directory (where the model was executed)
    # Path to the data directory containing the filenames to download from GCS
    data_dir: ${abspath:${.cwd}/../../data/waymo_open_dataset}
    label_map_path: ${data_dir}/label_map.pbtxt         # Path to the `label_map.pbtxt` file for the Waymo Open Dataset.
    size: 10                                            # Number of `.tfrecord` files to download from the `filenames.txt` list
    destination: ${.data_dir}/split                     # Path to output dataset directory after splitting
    train: ${.destination}/train                        # Path to train data after splitting
    evals: ${.destination}/eval                         # Path to evaluation data after splitting
    test: ${.destination}/test                          # Path to test data after splitting

ray:
    batch_size_get: None                                # Number of objects to process in batch with `ray.get()` (avoids object store OOM)