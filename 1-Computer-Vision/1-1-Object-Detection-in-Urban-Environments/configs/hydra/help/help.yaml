### TensorFlow Object Detection API on Custom Dataset ### 
## By Jonathan L. Moran (jonathan.moran107@gmail.com) ###


app_name: TensorFlow Object Detection API

# The header/footer/template to print when calling `--help`
header: |-
    ---------------------------------------------------------------------------
                        ${hydra.help.app_name}
    ---------------------------------------------------------------------------

footer: |-
    Packaged with <3 by Jonathan L. Moran (jonathan.moran107@gmail.com).
    Intended for use on the Waymo Open Dataset for the Perception-Sensor 2D task.

template: |-
    ${hydra.help.header}
    ${hydra.help.footer}


    Training/evaluation
    --------------------
    For local training/evaluation run:

    ```
    python model_main_tf2.py
    ```

    The following parameters can also be manually configured at runtime, as shown below:
    
    PIPELINE_CONFIG_PATH:                   Path to `pipeline.config` file.
    MODEL_DIR:                              Path to `/tmp/model_outputs/` folder.
    NUM_TRAIN_STEPS:                        Number of training steps (batches to process per epoch).
    EVAL_ON_TRAIN_DATA:                     If True, will evaluate on training data (only supported in distributed training).
    SAMPLE_1_OF_N_EVAL_EXAMPLES:            Number of evaluation samples to skip / will sample 1 of every n samples.
    SAMPLE_1_OF_N_EVAL_ON_TRAIN_EXAMPLES:   Number of training samples to skip for evaluation / only used if `eval_training_data` is True.
    EVAL_TIMEOUT:                           Number of seconds to wait for an evaluation checkpoint before exiting.
    USE_TPU:                                Whether the job is executing on a TPU.
    TPU_NAME:                               Name of the Cloud TPU for Cluster Resolvers.
    CHECKPOINT_EVERY_N:                     Integer defining how often to checkpoint.
    NUM_WORKERS:                            When `num_workers` > 1, training uses 'MultiWorkerMirroredStrategy',
                                            When `num_workers` = 1, training uses 'MirroredStrategy'.

    ```
    python model_main_tf2.py -- \
        --pipeline_config_path=PIPELINE_CONFIG_PATH \
        --model_dir=MODEL_DIR --num_train_steps=NUM_TRAIN_STEPS \
        --sample_1_of_n_eval_examples=SAMPLE_1_OF_N_EVAL_EXAMPLES \
        --...
    ```

    Configuration
    --------------
    To configure the model for training, run:

    ```
    python edit_config.py
    ```

    The following parameters can also be manually configured at runtime, as shown below:
   
    TRAIN_DIR:                              Path to train data directory.
    EVAL_DIR:                               Path to validation or test directory.
    BATCH_SIZE:                             Batch size for training.
    CHECKPOINT:                             Path to pre-trained model checkpoints.
    LABEL_MAP:                              Path to the `label_map` file.

    ```
    python edit_config.py -- \
        --train_dir=TRAIN_DIR --eval_dir=EVAL_DIR \
        --batch_size=BATCH_SIZE --checkpoint=CHECKPOINT \
        --label_map=


    Additional Resources
    --------------------
    For help with the TensorFlow Object Detection API, see: https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/.
    For help with the Waymo Open Dataset, see: https://waymo.com/open or https://github.com/waymo-research/waymo-open-dataset.
    For all other inquiries, please open an issue on the GitHub repository: https://github.com/jonathanloganmoran/ND0013-Self-Driving-Car-Engineer/issues.